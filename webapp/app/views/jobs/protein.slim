- content_for :stylesheets do
  = stylesheet_link_tag 'jobs/protein'

/* General transcript information. */
div class="general-info"

  /* Relevant links and info. */
  = link_to t('job.transcript.back'), url_for(:jobs, :job, @gene.job_id), :class => 'btn btn-primary pull-right job-button'
  = link_to t('job.protein.back'), url_for(:jobs, :transcript, @transcript.id), :class => 'btn btn-primary pull-right transcript-button'

  /* General information. */
  h4 class="section-name" = t('job.view.general_info')
  table class='id-table'
    tr
      td class="first" = t('job.protein.protein')
      td class="external" == gene_link(@protein.protein_id, :uniprot, @protein.name)
    tr
      td class="first" = t('job.protein.species_origin')
      td = @gene.species
    tr
      td class="first" = t('job.protein.species_used')
      td = @protein.species
  p class='separator'

  /* External references. */
  - if @protein.external_ids.size > 0
    - refs = ''
    - @protein.external_ids.each do |key, values|
      - refs += external_link(key, values)
    - unless refs.empty?
      h4 class="section-name" = t('job.view.external_refs')
      table class='id-table'
        == refs
      p class='separator'


  /* Additional information. */
  - if @protein.keywords.size > 0 || @protein.tissues.size > 0
    h4 class="section-name" = t('job.view.additional_info')
    table class='id-table'
      - if @protein.keywords.size > 0
        tr
          td class="first" = t('job.protein.keywords')
          td = @protein.keywords.join(',  ')
      - if @protein.tissues.size > 0
        tr
          td class="first" = t('job.protein.tissues')
          td = @protein.tissues.join(',  ')
    p class='separator'

  /* Ontologies. */
  - if @protein.cellular_component.size > 0 || @protein.molecular_function.size > 0 || @protein.biological_process.size > 0
    h4 class="section-name" = t('job.view.ontologies')
    table class='id-table'
      - if @protein.cellular_component.size > 0
        tr
          td class="first" = t('job.protein.cell_component')
          td = @protein.cellular_component.join(',  ')
      - if @protein.molecular_function.size > 0
        tr
          td class="first" = t('job.protein.mol_function')
          td = @protein.molecular_function.join(',  ')
      - if @protein.biological_process.size > 0
        tr
          td class="first" = t('job.protein.bio_process')
          td = @protein.biological_process.join(',  ')
  p class='separator'

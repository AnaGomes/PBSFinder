- content_for :stylesheets do
  = stylesheet_link_tag 'jobs/job'
- if @job.completed
  - content_for :javascripts do
    = javascript_include_tag 'jquery.thead.min', 'jobs/table_header'

  - unless @job.valid
    div class="bs-callout bs-callout-danger"
      h4 = t('job.view.bad_job.notice.title')
      p = t('job.view.bad_job.notice.content')

- else
  - content_for :javascripts do
    = javascript_include_tag 'jobs/check_job'

  div class="bs-callout bs-callout-info"
    h4 = t('job.view.notice.title')
    p = t('job.view.notice.notice1')
    - if @job.email
      p = t('job.view.notice.notice2')
    p = t('job.view.notice.notice3')

div class="info"
  div class="general-info"
    - if @job.valid
      div class="btn-group pull-right"
        button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"
          span = "#{t('job.view.download')} "
          span class="caret"
        ul class="dropdown-menu download-menu" role="menu"
          li
            = link_to 'CSV', url_for(:jobs, :job, @job.id, :format => :csv)
          li
            = link_to 'TSV', url_for(:jobs, :job, @job.id, :format => :tsv)

    - if @job.valid && @job.time
      p class='species'
        = "#{@job.genes.size} #{@job.genes.size == 1 ? 'gene' : 'genes'} analyzed in #{Time.at(@job.time).utc.strftime("%H:%M:%S")}"
    p class='separator'
    h4 = t('job.view.description')
    p class='description' = @job.description

  - if @job.valid
    div class="legend"
      h4 = t('job.view.legend')
      table
        tr
          td class="stripe visual"
          td = t('job.view.legend_stripe')
          td class="red visual divider" GENE ID
          td = t('job.view.legend_red')
          td class="blue visual divider" TRANSCRIPT ID
          td = t('job.view.legend_blue')

    div class="table-container table-responsive" id="protein-table-wrapper"
      table class="table table-condensed table-hover" id="protein-table"
        thead
          tr
            th Species
            th Gene
            th Transcript
            - @job.bind_proteins.each do |prot|
              th = prot
        tbody
          - even = false
          - @job.genes.each do |gene|
            - even = !even
            /* Bad gene (no conversion) */
            - if gene.transcripts.size == 0
              tr class="#{even ? 'striped' : ''}"
                td colspan="3" class="bad-gene"
                  = gene.original_id
                td colspan="#{@job.bind_proteins.size}" class="no-bind"

            /* No binding */
            - elsif !gene.binds
              tr class="#{even ? 'striped' : ''}"
                td rowspan="#{gene.transcripts.size}"
                  = gene.species
                td rowspan="#{gene.transcripts.size}"
                  = gene.name ? "#{gene.converted_id} (#{gene.name})" : gene.converted_id
                td
                  - trans = gene.transcripts.first
                  = link_to (trans.name ? "#{trans.converted_id} (#{trans.name})" : trans.converted_id), url(:jobs, :transcript, @job.id, gene.id, trans.id)
                td colspan="#{@job.bind_proteins.size}" class="no-bind"
                - gene.transcripts.drop(1).each do |trans|
                  tr class="#{even ? 'striped' : ''}"
                    td
                      = link_to (trans.name ? "#{trans.converted_id} (#{trans.name})" : trans.converted_id), url(:jobs, :transcript, @job.id, gene.id, trans.id)
                    td colspan="#{@job.bind_proteins.size}" class="no-bind"

            /* Normal gene */
            - else
              /* Just one transcript */
              - if gene.transcripts.size == 1
                  tr class="#{even ? 'striped' : ''}"
                    td
                      = gene.species
                    td
                      = gene.name ? "#{gene.converted_id} (#{gene.name})" : gene.converted_id
                    - trans = gene.transcripts.first
                    td
                      = link_to (trans.name ? "#{trans.converted_id} (#{trans.name})" : trans.converted_id), url(:jobs, :transcript, @job.id, gene.id, trans.id)
                    - trans.matches.each do |prot|
                      td class="#{prot ? 'match protein' : 'protein'}"

              /* Variant splicing */
              - else
                tr class="#{even ? 'striped' : ''}"
                  td rowspan="#{gene.transcripts.size + 1}"
                    = gene.species
                  td rowspan="#{gene.transcripts.size + 1}"
                    = gene.name ? "#{gene.converted_id} (#{gene.name})" : gene.converted_id
                - gene.transcripts.each do |trans|
                  tr class="#{even ? 'striped' : ''}"
                    td
                      = link_to (trans.name ? "#{trans.converted_id} (#{trans.name})" : trans.converted_id), url(:jobs, :transcript, @job.id, gene.id, trans.id)
                    - trans.matches.each do |prot|
                      td class="#{prot ? 'match protein' : 'protein'}"
